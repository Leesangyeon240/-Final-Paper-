!pip install opencv-python
!pip install numpy
!pip install matplotlib


import cv2
import numpy as np
import matplotlib.pyplot as plt


image_path = "Google Maps congestion graph image"
image = cv2.imread(image_path)

# 2. 이미지 전처리 (회색조 변환 및 이진화)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
_, binary = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)

# 3. 막대 검출 (윤곽선 추출)
contours, _ = cv2.findContours(binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# 4. 막대 길이 측정
bar_lengths = []
for contour in contours:
    x, y, w, h = cv2.boundingRect(contour)
    # 막대가 충분히 큰 경우만 선택
    if h > 10:  # 최소 높이 설정
        bar_lengths.append(h)
        # 막대를 이미지에 표시
        cv2.rectangle(image, (x, y), (x+w, y+h), (0, 255, 0), 2)

# 5. 결과 시각화
plt.figure(figsize=(10, 5))
plt.bar(range(len(bar_lengths)), bar_lengths)
plt.xlabel("Time Slots")
plt.ylabel("Bar Length (pixels)")
plt.title("Bar Lengths from Google Maps Graph")
plt.show()

